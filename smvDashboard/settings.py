"""
Django settings for smvDashboard project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import sentry_sdk
from dotenv import load_dotenv
from urllib.parse import urlparse

load_dotenv()
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#IP ADDRESS CONFIG
ip_address = "164.67.61.135" #internal or zerotier IPs based on production status

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-o@)!%p2vqem$@#emdls)%t!jvw@dph2mk^t!qj6q(#jeq#f&_k')

ALLOWED_HOSTS_TYPES = {
    "dev":
    ['localhost'], 
     "prod":
    ['smv.seas.ucla.edu', '10.147.17.52', '127.0.0.1'], 
}

ALLOWED_HOSTS = ALLOWED_HOSTS_TYPES['dev' if DEBUG else 'prod']


# Application definition

INSTALLED_APPS = [
    'daphne',
    "channels",
    'mqtt',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.admindocs',
    'django.contrib.messages',
    'django.contrib.staticfiles'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'smvDashboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smvDashboard.wsgi.application'
ASGI_APPLICATION = 'smvDashboard.asgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
tmpPostgres = urlparse(os.getenv("DATABASE_URL"))
DATABASES = {
    'prod': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': os.environ.get("POSTGRES_PW"),
        'HOST': f'{ip_address}',
        'PORT': '5432',
        'OPTIONS': {'sslmode': 'prefer'},
    },
    'dev': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "neondb",
        'USER': "neondb_owner",
        'PASSWORD': os.environ.get("NEON_DB_PW"),
        'HOST': "ep-fragrant-bird-aafbt96i.westus3.azure.neon.tech",
        'PORT': 5432,
        'OPTIONS': {'sslmode': 'require'},
  }
}


DATABASES['default'] = DATABASES['dev' if DEBUG else 'prod']

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'mqtt/static'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(f"127.0.0.1", "6379")],
        },
    },
}

CSRF_TRUSTED_ORIGINS = ['https://smv.seas.ucla.edu']